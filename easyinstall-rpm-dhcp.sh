#!/bin/bash

# Funções de cores
echoyellow() { echo -e "\e[33m$1\e[0m"; }
echored()    { echo -e "\e[31m$1\e[0m"; }
echogreen()  { echo -e "\e[32m$1\e[0m"; }
echoblue()   { echo -e "\e[94m$1\e[0m"; }
echocyan()   { echo -e "\e[36m$1\e[0m"; }


# === MOTD ===
echoyellow "=== Easy Install Script (DHCP) ==="
echoyellow "This script will install and configure a DHCP server on RPM-based systems."



# Função para validar entrada com valor padrão
prompt_nonempty_default() {
    local prompt="$1"
    local default="$2"
    local var
    while true; do
        read -p "$prompt [$default]: " var
        var="${var:-$default}"
        if [[ -n "$var" ]]; then
            echo "$var"
            break
        else
            echored "Input cannot be empty. Please try again."
        fi
    done
}

# Obter IP da interface ativa
ACTIVE_IFACE=$(ip route | grep '^default' | awk '{print $5}')
USER_IP=$(ip -4 addr show "$ACTIVE_IFACE" | grep -oP '(?<=inet\s)\d+(\.\d+){3}')
GATEWAY=$(ip route | grep '^default' | awk '{print $3}')
DOMAIN_SUGGESTED=$(hostname -d)
DNS_SUGGESTED="$USER_IP"

# Calcular base da rede
IFS='.' read -r IP1 IP2 IP3 IP4 <<< "$USER_IP"
SUBNET_BASE="$IP1.$IP2.$IP3"
SUBNET_DEFAULT="$SUBNET_BASE.0"
NETMASK_DEFAULT="255.255.255.0"
BROADCAST_DEFAULT="$SUBNET_BASE.255"
RANGE_START_DEFAULT="$SUBNET_BASE.100"
RANGE_END_DEFAULT="$SUBNET_BASE.254"
DEFAULT_LEASE_DEFAULT="86400"
MAX_LEASE_DEFAULT="604800"

echoyellow "=== Easy Install Script (DHCP Server Setup) ==="
echoyellow "This script will install and configure a DHCP server on RPM-based systems."


echoyellow "Detected IP address: $USER_IP on interface $ACTIVE_IFACE"
echoyellow "Suggested values are based on current network configuration."

# Perguntas com valores sugeridos
SUBNET=$(prompt_nonempty_default "Enter subnet IP" "$SUBNET_DEFAULT")
NETMASK=$(prompt_nonempty_default "Enter subnet mask" "$NETMASK_DEFAULT")
BROADCAST=$(prompt_nonempty_default "Enter broadcast address" "$BROADCAST_DEFAULT")
RANGE_START=$(prompt_nonempty_default "Enter IP range start" "$RANGE_START_DEFAULT")
RANGE_END=$(prompt_nonempty_default "Enter IP range end" "$RANGE_END_DEFAULT")
DEFAULT_LEASE=$(prompt_nonempty_default "Enter default lease time (in seconds)" "$DEFAULT_LEASE_DEFAULT")
MAX_LEASE=$(prompt_nonempty_default "Enter max lease time (in seconds)" "$MAX_LEASE_DEFAULT")
ROUTER=$(prompt_nonempty_default "Enter gateway/router IP" "$GATEWAY")
DOMAIN_NAME=$(prompt_nonempty_default "Enter your domain name" "${DOMAIN_SUGGESTED:-mydomain.local}")
DNS_SERVER=$(prompt_nonempty_default "Enter your DNS server 1" "$DNS_SUGGESTED")
DNS_SERVER2=$(prompt_nonempty_default "Enter your DNS server 2" "8.8.4.4")

# Instalação do DHCP
echoyellow ">>> Installing DHCP server package..."
dnf -y install dhcp-server

# Backup
echoyellow ">>> Backing up existing DHCP configuration if present..."
if [ -f /etc/dhcp/dhcpd.conf ]; then
    cp /etc/dhcp/dhcpd.conf /etc/dhcp/dhcpd.conf.bak.$(date +%F-%H%M%S)
fi

# Escrever nova configuração
echoyellow ">>> Writing new DHCP configuration..."
cat <<EOF > /etc/dhcp/dhcpd.conf
# DHCP Configuration generated by EasyInstall script
option domain-name "${DOMAIN_NAME}";
option domain-name-servers ${DNS_SERVER}, ${DNS_SERVER2};
default-lease-time ${DEFAULT_LEASE};
max-lease-time ${MAX_LEASE};
authoritative;

subnet ${SUBNET} netmask ${NETMASK} {
    range dynamic-bootp ${RANGE_START} ${RANGE_END};
    option broadcast-address ${BROADCAST};
    option routers ${ROUTER};
}
EOF

# Ativar serviço
echoyellow ">>> Enabling and starting DHCP service..."
systemctl enable --now dhcpd

# Firewall
echoyellow ">>> Configuring firewall to allow DHCP traffic..."
firewall-cmd --add-service=dhcp
firewall-cmd --runtime-to-permanent

# === USEFULL INFORMATION ===

# Finalização
echogreen ""
echogreen "DHCP Server installed successfully!"
echogreen "--------------------------------------"
echogreen "Save this information"
echogreen "To check DHCP server status:"
echogreen "    systemctl status dhcpd"
echogreen "To view real-time logs:"
echogreen "    journalctl -u dhcpd -f"
echogreen "To view active leases:"
echogreen "    cat /var/lib/dhcpd/dhcpd.leases"
echogreen "Config file:"
echogreen "    cat /etc/dhcp/dhcpd.conf"
echogreen ""
echogreen "--------------------------------------"
echogreen "More scripts: https://github.com/source-saraiva/easyinstall/"
echogreen "--------------------------------------"
